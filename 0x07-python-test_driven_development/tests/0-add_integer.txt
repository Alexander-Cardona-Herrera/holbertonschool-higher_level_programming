The ``0-add_integer.py`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer(-1, -22)
    -23

    >>> add_integer(-75,)
    23

    >>> add_integer(19, 2*2)
    23

    >>> add_integer(8/2, 19)
    23

    >>> add_integer(1.5, 22.5)
    23

    >>> add_integer(True)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(, 23)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

    >>> add_integer(str, str)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer([23])
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer('x', 23)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer({'x': 23}, 23)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(23, [3])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(23, 'x')
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(23, {'x': 23})
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(6, 8, 9)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> import os
    >>> os.popen("pep8 0-add_integer.py").read()
    ''

    >>> import os
    >>> os.path.exists('README.md')
    True
